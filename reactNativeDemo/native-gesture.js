// 手势响应系统
// 在手势方面移动设备比 web 端复杂很多
// 用户的真实意图是什么，app 要经过好几个阶段才能判断
// 比如说双指滚动，三指点击，三指滑动，四指上划，可能在做一个动作时改变动作，还可以多个动作一起做
// 响应触摸事件的系统需要能够捕捉当前组件的触摸事件，而不依赖其他组件

// 用户的每一次操作都应该有如下属性：
// 用户知道自己到底按了什么东西，以及松开手会发生什么
// 用户在进行操作时，应该可以把手势移开来终止操作

// 由 Touchable 实现，用来做可触控的组件，它封装了响应系统
// 就像是刚才 ListView 上需要点击一样
// 简单的按钮或链接，用 TouchableHighlight 就可以了

// 过程：
// 1. 在触摸事件发生时，询问组件是否想要成为响应者，否的话，每次移动再询问
// 2. 如果愿意成为响应者：开始响应 或者 现在响应的另有其人，需要等待
// 3. 如果已经开始响应触摸事件了，下面的处理函数将会被一一调用，一次响应的过程
//    1) 用户在屏幕上移动手指（没有停下也没有离开）
//    2) 触摸结束后出发（用户抬起手指）
//    3) 有其他组件接替响应者，询问响应者是否放权
//    4) 响应者权利已交出，可能是交给了其他的组件，也可能是通过操作系统夺权
// 这些事件的参数由一次触摸的相关参数组成，包括当前触摸位置，触摸ID等等。

// 前面的是否响应触摸事件的两个方法中，以冒泡形式调用，即嵌套最深的节点最先响应。
// 父组件可以在捕获期阻止子组件成为响应者，可以调用一个方法来组阻止子组件的响应。

// 所以，用 Touchable 来捕获触摸事件，通过一系列的方法对捕获事件进行操作